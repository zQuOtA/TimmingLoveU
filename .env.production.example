# ============================================
# PRODUCTION ENVIRONMENT VARIABLES
# ============================================
# Copy this file to .env.production and fill in the actual values

# ============================================
# DATABASE CONFIGURATION (REQUIRED)
# ============================================
# PostgreSQL connection URL
# Example for Supabase: postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT].supabase.co:5432/postgres
# Example for Railway: postgresql://postgres:[PASSWORD]@[HOST]:5432/railway
# Example for local: postgresql://timming:password@localhost:5432/timming_loveu
DATABASE_URL="postgresql://neondb_owner:npg_0CBHJVFEPz9L@ep-weathered-base-acxmst6l-pooler.sa-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require"


# Direct database URL (for Prisma migrations in serverless environments)
# DIRECT_DATABASE_URL="postgresql://user:password@host:5432/database"

# ============================================
# NEXTAUTH CONFIGURATION (REQUIRED)
# ============================================
# Generate with: openssl rand -base64 32
# IMPORTANT: Use a strong, unique secret in production!
NEXTAUTH_SECRET="8abac02f78c0c24a1fe0a72c6b1e3991"

# Your production URL
# Example: https://timming-loveu.vercel.app or https://yourdomain.com
NEXTAUTH_URL="https://timmingloveu.shopm"

# ============================================
# APPLICATION CONFIGURATION
# ============================================
NODE_ENV="production"
PORT="3000"

# ============================================
# EMAIL CONFIGURATION (OPTIONAL)
# ============================================
# For email notifications and password reset
# EMAIL_SERVER="smtp://username:password@smtp.sendgrid.net:587"
# EMAIL_FROM="noreply@yourdomain.com"
# SMTP_HOST="smtp.sendgrid.net"
# SMTP_PORT="587"
# SMTP_USER="apikey"
# SMTP_PASSWORD="your-sendgrid-api-key"

# ============================================
# CLOUD STORAGE (OPTIONAL)
# ============================================
# Uncomment and configure one of the following for media uploads

# AWS S3
# AWS_ACCESS_KEY_ID="your-access-key"
# AWS_SECRET_ACCESS_KEY="your-secret-key"
# AWS_REGION="us-east-1"
# AWS_S3_BUCKET="timming-loveu-uploads"

# Cloudinary
# CLOUDINARY_CLOUD_NAME="your-cloud-name"
# CLOUDINARY_API_KEY="your-api-key"
# CLOUDINARY_API_SECRET="your-api-secret"

# ============================================
# PAYMENT PROCESSING (OPTIONAL)
# ============================================
# Stripe for subscription management
# STRIPE_SECRET_KEY="sk_live_..."
# STRIPE_PUBLISHABLE_KEY="pk_live_..."
# STRIPE_WEBHOOK_SECRET="whsec_..."

# ============================================
# ANALYTICS & MONITORING (OPTIONAL)
# ============================================
# Google Analytics
# NEXT_PUBLIC_GA_ID="G-XXXXXXXXXX"

# Sentry for error tracking
# SENTRY_DSN="https://xxx@xxx.ingest.sentry.io/xxx"
# SENTRY_AUTH_TOKEN="your-sentry-auth-token"
# NEXT_PUBLIC_SENTRY_DSN="https://xxx@xxx.ingest.sentry.io/xxx"

# ============================================
# RATE LIMITING & CACHING (OPTIONAL)
# ============================================
# Upstash Redis for rate limiting and caching
# UPSTASH_REDIS_REST_URL="https://your-redis.upstash.io"
# UPSTASH_REDIS_REST_TOKEN="your-token"

# Redis (if self-hosted)
# REDIS_URL="redis://localhost:6379"

# ============================================
# SOCIAL AUTH PROVIDERS (OPTIONAL)
# ============================================
# Google OAuth
# GOOGLE_CLIENT_ID="your-client-id.apps.googleusercontent.com"
# GOOGLE_CLIENT_SECRET="your-client-secret"

# Facebook OAuth
# FACEBOOK_CLIENT_ID="your-facebook-app-id"
# FACEBOOK_CLIENT_SECRET="your-facebook-app-secret"

# GitHub OAuth
# GITHUB_CLIENT_ID="your-github-client-id"
# GITHUB_CLIENT_SECRET="your-github-client-secret"

# ============================================
# FEATURE FLAGS (OPTIONAL)
# ============================================
# ENABLE_REGISTRATION="true"
# ENABLE_EMAIL_VERIFICATION="true"
# ENABLE_SOCIAL_LOGIN="true"
# MAINTENANCE_MODE="false"

# ============================================
# LOGGING & DEBUGGING (OPTIONAL)
# ============================================
# DEBUG="false"
# LOG_LEVEL="info" # Options: debug, info, warn, error
# ENABLE_QUERY_LOGGING="false"

# ============================================
# SECURITY (OPTIONAL)
# ============================================
# CORS_ORIGIN="https://yourdomain.com"
# RATE_LIMIT_MAX="100" # Max requests per window
# RATE_LIMIT_WINDOW="900000" # Window in ms (15 minutes)

# ============================================
# DEPLOYMENT SPECIFIC
# ============================================
# Vercel specific
# VERCEL_URL="auto-generated-by-vercel"
# VERCEL_ENV="production"

# Docker specific
# POSTGRES_USER="Daniel"
# POSTGRES_PASSWORD="dan3110202d"
# POSTGRES_DB="timming_loveu"
# POSTGRES_PORT="5432"

# ============================================
# NOTES:
# ============================================
# 1. Never commit this file with real values to Git
# 2. Use environment variables in your hosting platform
# 3. For Vercel: Add variables in Project Settings > Environment Variables
# 4. For Docker: Create .env.production file locally
# 5. Generate strong secrets for production
# 6. Use SSL/TLS for database connections in production
# 7. Enable all security features in production
# ============================================
